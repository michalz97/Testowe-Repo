{
	"info": {
		"_postman_id": "272764a0-b93f-4dcb-ac54-db13b51a0073",
		"name": "Doctor.One",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21865611"
	},
	"item": [
		{
			"name": "Authorization controller",
			"item": [
				{
					"name": "register-doctor",
					"item": [
						{
							"name": "register-doctor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"   pm.response.to.have.status(201);\r",
											"})\r",
											"\r",
											"pm.test(\"Should verify response - firebaseId\", () => {\r",
											"    const resData = pm.response.json();\r",
											"    console.log(resData.firebaseId);\r",
											"    pm.expect(resData.firebaseId.length).to.be.greaterThan(0);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"{{$randomEmail}}\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-doctor",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-doctor"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-doctor (spain)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"   pm.response.to.have.status(201);\r",
											"})\r",
											"\r",
											"pm.test(\"Should verify response - firebaseId\", () => {\r",
											"    const resData = pm.response.json();\r",
											"    console.log(resData.firebaseId);\r",
											"    pm.expect(resData.firebaseId.length).to.be.greaterThan(0);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"{{$randomEmail}}\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+351\",\n  \"phoneCountryCode\": \"PT\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Lisbon\",\n  \"language\": \"pt\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-doctor",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-doctor"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-doctor (no @ or domain)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"plainaddress\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-doctor",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-doctor"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-doctor (missing @)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"email.domain.com\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-doctor",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-doctor"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-doctor (empty email)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-doctor",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-doctor"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-doctor (missing adress)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"@domain.com\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-doctor",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-doctor"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-doctor (garbage)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"#@%^%#$@#$@#.com\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-doctor",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-doctor"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-doctor (copy/paste from adress book with name)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"Joe Smith <email@domain.com>\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-doctor",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-doctor"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-doctor (superfluous text)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"email@domain.com (Joe Smith)\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-doctor",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-doctor"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-doctor (two @)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"email@domain@domain.com\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-doctor",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-doctor"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-doctor (leading dot in adress)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \".email@domain.com\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-doctor",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-doctor"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-doctor (trailing dot in adress)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"email.@domain.com\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-doctor",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-doctor"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-doctor (multiple dots)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"email..email@domain.com\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-doctor",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-doctor"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-doctor (leading dash in domain)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"email@-domain.com\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-doctor",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-doctor"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-doctor (leading dot in domain)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"email@.domain.com\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-doctor",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-doctor"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-doctor (invalid IP format)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"email@111.222.333.44444\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-doctor",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-doctor"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-doctor (multiple dots in domain)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"email@domain..com\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-doctor",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-doctor"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "register-patient",
					"item": [
						{
							"name": "register-patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"   pm.response.to.have.status(201);\r",
											"})\r",
											"\r",
											"pm.test(\"Should verify response - firebaseId\", () => {\r",
											"    const resData = pm.response.json();\r",
											"    console.log(resData.firebaseId);\r",
											"    pm.expect(resData.firebaseId.length).to.be.greaterThan(0);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"{{$randomEmail}}\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\",\n  \"consentApplicationRegulations\": true,\n  \"consentPrivacyPolicy\": true,\n  \"consentMarketingAgreement\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-patient (no @ or domain)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"plainaddress\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\",\n  \"consentApplicationRegulations\": true,\n  \"consentPrivacyPolicy\": true,\n  \"consentMarketingAgreement\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-patient (missing @)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"email.domain.com\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\",\n  \"consentApplicationRegulations\": true,\n  \"consentPrivacyPolicy\": true,\n  \"consentMarketingAgreement\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-patient (empty email)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\",\n  \"consentApplicationRegulations\": true,\n  \"consentPrivacyPolicy\": true,\n  \"consentMarketingAgreement\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-patient (missing adress)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"@domain.com\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\",\n  \"consentApplicationRegulations\": true,\n  \"consentPrivacyPolicy\": true,\n  \"consentMarketingAgreement\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-patient (garbage)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"#@%^%#$@#$@#.com\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\",\n  \"consentApplicationRegulations\": true,\n  \"consentPrivacyPolicy\": true,\n  \"consentMarketingAgreement\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-patient (copy/paste from adress book with name)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"Joe Smith <email@domain.com>\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\",\n  \"consentApplicationRegulations\": true,\n  \"consentPrivacyPolicy\": true,\n  \"consentMarketingAgreement\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-patient (superfluous text)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"email@domain.com (Joe Smith)\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\",\n  \"consentApplicationRegulations\": true,\n  \"consentPrivacyPolicy\": true,\n  \"consentMarketingAgreement\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-patient (two @)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"email@domain@domain.com\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\",\n  \"consentApplicationRegulations\": true,\n  \"consentPrivacyPolicy\": true,\n  \"consentMarketingAgreement\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-patient (leading dot in adress)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \".email@domain.com\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\",\n  \"consentApplicationRegulations\": true,\n  \"consentPrivacyPolicy\": true,\n  \"consentMarketingAgreement\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-patient (trailing dot in adress)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"email.@domain.com\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\",\n  \"consentApplicationRegulations\": true,\n  \"consentPrivacyPolicy\": true,\n  \"consentMarketingAgreement\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-patient (multiple dots)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"email..email@domain.com\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\",\n  \"consentApplicationRegulations\": true,\n  \"consentPrivacyPolicy\": true,\n  \"consentMarketingAgreement\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-patient (leading dash in domain)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"email@-domain.com\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\",\n  \"consentApplicationRegulations\": true,\n  \"consentPrivacyPolicy\": true,\n  \"consentMarketingAgreement\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-patient (leading dot in domain)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"email@.domain.com\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\",\n  \"consentApplicationRegulations\": true,\n  \"consentPrivacyPolicy\": true,\n  \"consentMarketingAgreement\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-patient (invalid IP format)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"email@111.222.333.44444\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\",\n  \"consentApplicationRegulations\": true,\n  \"consentPrivacyPolicy\": true,\n  \"consentMarketingAgreement\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "register-patient (multiple dots in domain)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"email@domain..com\",\n  \"name\": \"Jan\",\n  \"surname\": \"Kowalski\",\n  \"password\": \"!QAZ2wsx\",\n  \"phoneCountryPrefix\": \"+48\",\n  \"phoneCountryCode\": \"PL\",\n  \"phoneNumber\": \"100 200 300\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"language\": \"pl\",\n  \"consentApplicationRegulations\": true,\n  \"consentPrivacyPolicy\": true,\n  \"consentMarketingAgreement\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/register-patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"register-patient"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "sign-in",
					"item": [
						{
							"name": "sign-in (doctor email)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"   pm.response.to.have.status(201);\r",
											"})\r",
											"\r",
											"pm.test(\"Should verify response - token\", () => {\r",
											"    const resData = pm.response.json();\r",
											"    console.log(resData.token);\r",
											"    pm.expect(resData.token.length).to.be.greaterThan(0);\r",
											"})\r",
											"\r",
											"const resData = pm.response.json();\r",
											"pm.environment.set(\"tokenDoctor\", resData.token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailOrPhone\": \"{{emailDoctor}}\",\n  \"password\": \"Tukano2022\",\n  \"role\": \"doctor\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/sign-in",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"sign-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "sign-in (doctor number)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"   pm.response.to.have.status(201);\r",
											"})\r",
											"\r",
											"pm.test(\"Should verify response - token\", () => {\r",
											"    const resData = pm.response.json();\r",
											"    console.log(resData.token);\r",
											"    pm.expect(resData.token.length).to.be.greaterThan(0);\r",
											"})\r",
											"\r",
											"const resData = pm.response.json();\r",
											"pm.environment.set(\"tokenDoctor\", resData.token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailOrPhone\": \"{{doctorTelNumber}}\",\n  \"password\": \"Tukano2022\",\n  \"role\": \"doctor\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/sign-in",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"sign-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "sign-in (patient email)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"   pm.response.to.have.status(201);\r",
											"})\r",
											"\r",
											"pm.test(\"Should verify response - token\", () => {\r",
											"    const resData = pm.response.json();\r",
											"    console.log(resData.token);\r",
											"    pm.expect(resData.token.length).to.be.greaterThan(0);\r",
											"})\r",
											"\r",
											"const resData = pm.response.json();\r",
											"pm.environment.set(\"tokenPatient\", resData.token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailOrPhone\": \"{{emailPatient}}\",\n  \"password\": \"Tukano2022\",\n  \"role\": \"patient\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/sign-in",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"sign-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "sign-in (patient number)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"   pm.response.to.have.status(201);\r",
											"})\r",
											"\r",
											"pm.test(\"Should verify response - token\", () => {\r",
											"    const resData = pm.response.json();\r",
											"    console.log(resData.token);\r",
											"    pm.expect(resData.token.length).to.be.greaterThan(0);\r",
											"})\r",
											"\r",
											"const resData = pm.response.json();\r",
											"pm.environment.set(\"tokenPatient\", resData.token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailOrPhone\": \"{{patientTelNumber}}\",\n  \"password\": \"Tukano2022\",\n  \"role\": \"patient\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/sign-in",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"sign-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "sign-in (incorrect email format)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailOrPhone\": \"software.house.tukanogmail.com\",\n  \"password\": \"Tukano2022\",\n  \"role\": \"doctor\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/sign-in",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"sign-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "sign-in (incorrect number format)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailOrPhone\": \"792926\",\n  \"password\": \"Tukano2022\",\n  \"role\": \"doctor\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/sign-in",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"sign-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "sign-in (incorrect role)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"{{emailPatient}}\",\n  \"password\": \"Tukano2022\",\n  \"role\": \"doctor\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/sign-in",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"sign-in"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "refresh-token",
					"item": [
						{
							"name": "refresh-token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://doctor-one-test.appspot.com/api/common/auth/refresh-token",
									"protocol": "https",
									"host": [
										"doctor-one-test",
										"appspot",
										"com"
									],
									"path": [
										"api",
										"common",
										"auth",
										"refresh-token"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{idTokenDoctor}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "obtain-id-token",
					"item": [
						{
							"name": "obtain-id-token (doctor)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"   pm.response.to.have.status(201);\r",
											"})\r",
											"\r",
											"const resData = pm.response.json();\r",
											"pm.environment.set(\"idTokenDoctor\", resData.idToken);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"let [header, payload, signature] = resData.idToken.split('.');\r",
											"\r",
											"function decode(x) {\r",
											"    let wordArray = CryptoJS.enc.Base64.parse(x);\r",
											"    let str = CryptoJS.enc.Utf8.stringify(wordArray);\r",
											"    return JSON.parse(str);\r",
											"}\r",
											"\r",
											"let decodedPayload = decode(payload);\r",
											"\r",
											"pm.environment.set(\"accountId\", decodedPayload.accountId);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customToken\": \"{{tokenDoctor}}\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/obtain-id-token",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"obtain-id-token"
									]
								}
							},
							"response": []
						},
						{
							"name": "obtain-id-token (patient)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"   pm.response.to.have.status(201);\r",
											"})\r",
											"\r",
											"const resData = pm.response.json();\r",
											"pm.environment.set(\"idTokenPatient\", resData.idToken);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customToken\": \"{{tokenPatient}}\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/obtain-id-token",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"obtain-id-token"
									]
								}
							},
							"response": []
						},
						{
							"name": "obtain-id-token (old token)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", () => {\r",
											"   pm.response.to.have.status(500);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customToken\": \"{{oldToken}}\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/auth/obtain-id-token",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"auth",
										"obtain-id-token"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "reset-password",
					"item": [
						{
							"name": "reset-password (doctor)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"{{emailDoctor}}\",\n  \"language\": \"pl\"\n}"
								},
								"url": {
									"raw": "https://doctor-one-test.appspot.com/api/common/auth/reset-password",
									"protocol": "https",
									"host": [
										"doctor-one-test",
										"appspot",
										"com"
									],
									"path": [
										"api",
										"common",
										"auth",
										"reset-password"
									]
								}
							},
							"response": []
						},
						{
							"name": "reset-password (patient)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"{{emailPatient}}\",\n  \"language\": \"pl\"\n}"
								},
								"url": {
									"raw": "https://doctor-one-test.appspot.com/api/common/auth/reset-password",
									"protocol": "https",
									"host": [
										"doctor-one-test",
										"appspot",
										"com"
									],
									"path": [
										"api",
										"common",
										"auth",
										"reset-password"
									]
								}
							},
							"response": []
						},
						{
							"name": "reset-password (incorrect email)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"software.house.tukanogmail.com\",\n  \"language\": \"pl\"\n}"
								},
								"url": {
									"raw": "https://doctor-one-test.appspot.com/api/common/auth/reset-password",
									"protocol": "https",
									"host": [
										"doctor-one-test",
										"appspot",
										"com"
									],
									"path": [
										"api",
										"common",
										"auth",
										"reset-password"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{idTokenDoctor}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "account-exist",
					"item": [
						{
							"name": "account-exist (email doctor)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check that accountExist is correct\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"true\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://doctor-one-test.appspot.com/api/common/auth/account-exist/doctor?value={{emailDoctor}}",
									"protocol": "https",
									"host": [
										"doctor-one-test",
										"appspot",
										"com"
									],
									"path": [
										"api",
										"common",
										"auth",
										"account-exist",
										"doctor"
									],
									"query": [
										{
											"key": "value",
											"value": "{{emailDoctor}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "account-exist (no exist doctor)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://doctor-one-test.appspot.com/api/common/auth/account-exist/doctor?value={{emailDoctor+1}}",
									"protocol": "https",
									"host": [
										"doctor-one-test",
										"appspot",
										"com"
									],
									"path": [
										"api",
										"common",
										"auth",
										"account-exist",
										"doctor"
									],
									"query": [
										{
											"key": "value",
											"value": "{{emailDoctor+1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "account-exist (email patient)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check that accountExist is correct\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"true\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://doctor-one-test.appspot.com/api/common/auth/account-exist/patient?value=software.house.tukano%2Bpatient1%40gmail.com",
									"protocol": "https",
									"host": [
										"doctor-one-test",
										"appspot",
										"com"
									],
									"path": [
										"api",
										"common",
										"auth",
										"account-exist",
										"patient"
									],
									"query": [
										{
											"key": "value",
											"value": "software.house.tukano%2Bpatient1%40gmail.com"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "account-exist (email patient2)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check that accountExist is correct\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"true\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://doctor-one-test.appspot.com/api/common/auth/account-exist/doctor?value={{email}}",
									"protocol": "https",
									"host": [
										"doctor-one-test",
										"appspot",
										"com"
									],
									"path": [
										"api",
										"common",
										"auth",
										"account-exist",
										"doctor"
									],
									"query": [
										{
											"key": "value",
											"value": "{{email}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "account-exist (no exist patient)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check that accountExist is correct\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"false\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://doctor-one-test.appspot.com/api/common/auth/account-exist/doctor?value={{email+1}}",
									"protocol": "https",
									"host": [
										"doctor-one-test",
										"appspot",
										"com"
									],
									"path": [
										"api",
										"common",
										"auth",
										"account-exist",
										"doctor"
									],
									"query": [
										{
											"key": "value",
											"value": "{{email+1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "account-exist (incorrect role)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check that accountExist is correct\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"true\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://doctor-one-test.appspot.com/api/common/auth/account-exist/patient?value={{email}}",
									"protocol": "https",
									"host": [
										"doctor-one-test",
										"appspot",
										"com"
									],
									"path": [
										"api",
										"common",
										"auth",
										"account-exist",
										"patient"
									],
									"query": [
										{
											"key": "value",
											"value": "{{email}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{idTokenDoctor}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Chat controller",
			"item": [
				{
					"name": "get-first-message-doc",
					"item": [
						{
							"name": "get-first-message-doc",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {\r",
											"   pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{idTokenDoctor}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/common/chat/get-first-message-doc",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"get-first-message-doc"
									]
								}
							},
							"response": []
						},
						{
							"name": "get-first-message-doc (token from patient)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", () => {\r",
											"   pm.response.to.have.status(403);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{idTokenPatient}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/common/chat/get-first-message-doc",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"get-first-message-doc"
									]
								}
							},
							"response": []
						},
						{
							"name": "get-first-message-doc (without token)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", () => {\r",
											"   pm.response.to.have.status(403);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/common/chat/get-first-message-doc",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"get-first-message-doc"
									]
								}
							},
							"response": []
						},
						{
							"name": "get-first-message-doc (old bearer token)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", () => {\r",
											"   pm.response.to.have.status(403);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{oldIdToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/common/chat/get-first-message-doc",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"get-first-message-doc"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get-first-message-pat",
					"item": [
						{
							"name": "get-first-message-pat",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {\r",
											"   pm.response.to.have.status(200);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{idTokenPatient}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/common/chat/get-first-message-pat",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"get-first-message-pat"
									]
								}
							},
							"response": []
						},
						{
							"name": "get-first-message-pat (token from doctor)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", () => {\r",
											"   pm.response.to.have.status(403);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{idTokenDoctor}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/common/chat/get-first-message-pat",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"get-first-message-pat"
									]
								}
							},
							"response": []
						},
						{
							"name": "get-first-message-pat (without token)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", () => {\r",
											"   pm.response.to.have.status(403);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/common/chat/get-first-message-pat",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"get-first-message-pat"
									]
								}
							},
							"response": []
						},
						{
							"name": "get-first-message-pat (old bearer token)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", () => {\r",
											"   pm.response.to.have.status(403);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{oldIdToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/common/chat/get-first-message-pat",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"get-first-message-pat"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "generate-test-messages",
					"item": [
						{
							"name": "generate-test-messages",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"   pm.response.to.have.status(201);\r",
											"})\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"SUCCESS\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_ids\": [\n    \"aa05cc71-b9f1-4ff4-a2ca-0852bc8c65a4\",\n    \"3d59af26-9024-44a0-b569-d1a0fd0e5f2a\",\n    \"9b665e40-568e-4458-9b1d-cd50284014d0\",\n    \"a8000cc2-5ff7-4d8d-ad2c-3b17893184dc\",\n    \"c025db22-f3da-4f47-8e8b-35b2494d272a\"\n  ],\n  \"messages_quantity\": 10\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/generate-test-messages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"generate-test-messages"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{idTokenDoctor}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "room-list",
					"item": [
						{
							"name": "rooms-list (doctor)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"let moment = require ('moment'); \r",
											"pm.test('Date is present in correct format', () => {\r",
											"    _.each(pm.response.json(), (item) => {\r",
											"        pm.expect(item.creationDate).to.include(moment(item.creationDate).toISOString())\r",
											"    })\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/common/chat/rooms-list",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"rooms-list"
									]
								}
							},
							"response": []
						},
						{
							"name": "rooms-list (check user is a participant of rooms)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"let jsonData = pm.response.json()\r",
											"\r",
											"pm.test('The `userId` contains accountId', () => {\r",
											"    _.each(jsonData.userId, (item) => {\r",
											"        pm.expect(item.userId).to.include(pm.environment.get(\"accountId\"))\r",
											"    })\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/common/chat/rooms-list",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"rooms-list"
									]
								}
							},
							"response": []
						},
						{
							"name": "rooms-list (patient without room)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Data array is empty\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    console.log(jsonData);\r",
											"    pm.expect(jsonData.length).to.eql(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{idTokenPatient}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/common/chat/rooms-list",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"rooms-list"
									]
								}
							},
							"response": []
						},
						{
							"name": "rooms-list (validate there are no duplicate of roomId)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"function checkIfArrayIsUnique(array) {\r",
											"  return array.length === new Set(array).size;\r",
											"}\r",
											"\r",
											"pm.test('Check is Ids are unique', () => {\r",
											"    let ids = []\r",
											"    _.each(pm.response.json(), (item) => {\r",
											"        ids.push(item.roomId)\r",
											"    })\r",
											"\r",
											"    pm.expect(checkIfArrayIsUnique(ids), ids).to.be.true\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/common/chat/rooms-list",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"rooms-list"
									]
								}
							},
							"response": []
						},
						{
							"name": "rooms-list (response body is not empty)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check JSON Response body is not empty\", function() {\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"pm.expect(jsonData.lenght).to.eql(undefined)\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "*/*",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/common/chat/rooms-list",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"rooms-list"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{idTokenDoctor}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "send-message",
					"item": [
						{
							"name": "send-message",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var date = jsonData.date;\r",
											"let moment = require ('moment'); \r",
											"pm.test(\"Date is present in correct format\", function () { \r",
											"    pm.expect(date).to.include(moment(date).toISOString())\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roomId\": \"00e197b2-fab1-471a-acae-77821a55d0e2\",\n  \"text\": \"test\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/send-message",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"send-message"
									]
								}
							},
							"response": []
						},
						{
							"name": "send-message (empty message)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roomId\": \"00e197b2-fab1-471a-acae-77821a55d0e2\",\n  \"text\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/send-message",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"send-message"
									]
								}
							},
							"response": []
						},
						{
							"name": "send-message (empty body request)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/send-message",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"send-message"
									]
								}
							},
							"response": []
						},
						{
							"name": "send-message (lorem ipsum)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roomId\": \"00e197b2-fab1-471a-acae-77821a55d0e2\",\n  \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam rutrum felis malesuada nunc hendrerit egestas. Integer sit amet consequat urna. Proin sapien mauris, pretium a semper a, aliquam ac ipsum. Proin vel consequat libero. Ut aliquet tellus nec mauris consequat, vel accumsan dolor mattis. Sed porttitor, tortor eu sagittis tristique, neque mi sagittis nisi, eget dapibus purus dolor non eros. Fusce suscipit nulla in quam iaculis egestas. Nullam sollicitudin eu nunc quis finibus.roin fringilla dolor ac elementum scelerisque. Sed at tempor erat. Vivamus tellus mi, egestas a purus a, pretium volutpat libero. Donec quis eros dolor. Aenean vehicula est quis nisi malesuada, vel blandit arcu interdum. Sed blandit erat in nisi posuere hendrerit. Phasellus semper, mi vitae placerat dictum, dui urna mattis mauris, ac faucibus mauris lorem sit amet libero. Ut sit amet rutrum mi. Etiam leo tortor, fermentum a consequat a, bibendum et tortor. Etiam quis condimentum ante, sit amet suscipit ante. Sed lobortis ultrices erat, id elementum libero vulputate ac. Aenean aliquam convallis dictum. Aenean viverra luctus risus, nec placerat urna consectetur iaculis. Pellentesque sit amet ante varius, suscipit odio id, laoreet magna. Curabitur iaculis urna ut erat tincidunt, vitae scelerisque velit accumsan. Cras convallis, ipsum ac convallis rhoncus, mi mi rutrum velit, ac viverra nisi sapien nec lorem. Ut nec sapien eros. Morbi sodales, magna eu tempor scelerisque, nibh nibh varius leo, eget dapibus lorem leo ac arcu. Nunc rhoncus efficitur finibus. Pellentesque vel rutrum urna. Nulla eleifend, orci in iaculis sollicitudin, nunc sem vestibulum mi, at cursus libero quam nec nunc. Sed tristique enim at metus malesuada placerat. In imperdiet ante et dui fermentum sagittis. Fusce vel aliquam velit, et dictum elit. Nullam suscipit, ex feugiat consectetur tincidunt, odio tellus ullamcorper orci, non ultricies magna enim eu sapien. Aliquam tempor leo dolor, eu consectetur erat aliquam in. Etiam iaculis mi luctus rutrum ullamcorper.  Aenean dignissim justo id bibendum blandit. Phasellus imperdiet ullamcorper finibus. Vestibulum feugiat volutpat consectetur. In facilisis aliquet felis, sit amet imperdiet leo tincidunt dapibus. Donec efficitur, odio ac pretium semper, eros justo consequat velit, nec blandit ante augue vitae purus. Phasellus non arcu vel sapien laoreet faucibus eu vitae dui. Nulla tempus nisi libero, at tristique libero convallis at. Morbi id lectus nulla. Pellentesque ornare varius ipsum. Vestibulum sed elit non lorem vehicula ultrices in non risus. Nunc id porttitor ex. Mauris dolor elit, mattis sed enim id, lobortis faucibus sem. Cras bibendum justo a enim consectetur dapibus. Quisque maximus feugiat arcu ac vulputate. Aenean vulputate accumsan ex, a efficitur quam.Phasellus nec lectus elit. Nam eu ex ullamcorper, ultricies neque vel, mollis ligula. Integer in semper leo. Praesent aliquam erat eget ipsum tempus ornare. Ut mattis, elit vitae molestie posuere, nulla libero lobortis erat, eget interdum nisi mi in ligula. Integer quis hendrerit enim. Aenean quam leo, accumsan vitae lacus porta, fringilla sagittis arcu. Sed vel metus libero. Mauris in nunc sit amet lacus commodo vehicula vitae vel lectus. Vivamus fermentum, enim et posuere elementum, magna nulla consequat tellus, at tristique sapien odio a arcu. Nullam ut massa vitae elit accumsan consectetur in ac sapien. Etiam venenatis pretium ex eget consequat. Maecenas ac auctor sapien. Ut porta dignissim euismod. Curabitur ligula purus, hendrerit non urna a, consequat laoreet tortor.\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/send-message",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"send-message"
									]
								}
							},
							"response": []
						},
						{
							"name": "send-message (unicode)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roomId\": \"00e197b2-fab1-471a-acae-77821a55d0e2\",\n  \"text\": \"نفس سقطت وبالتحديد،😍👩🏽👾 🙇 💁 🙅 🙆 🙋 🙎 🙍🐵 🙈 🙉 🙊❤️ 💔 💌 💕 💞 💓 💗 💖 💘 💝 💟 💜 💛 💚 💙✋🏿 💪🏿 👐🏿 🙌🏿 👏🏿 🙏🏿🚾 🆒 🆓 🆕 🆖 🆗 🆙 🏧0️⃣ 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣ 7️⃣ 8️⃣ 9️⃣ 🔟, جزيرتي𝓣𝓱𝓮 𝓺𝓾𝓲𝓬𝓴 𝓫𝓻𝓸𝔀𝓷 𝓯𝓸𝔁 𝓳𝓾𝓶𝓹𝓼 𝓸𝓿𝓮𝓻 𝓽𝓱𝓮 𝓵𝓪𝔃𝔂 𝓭𝓸𝓰 باستخدام أن دنو. إذ هنا؟ الستار وتنصيب كان. أهّل ايطالrلُلُصّبُلُلصّبُررً ॣ ॣh ॣ ॣ冗🏳0🌈️ఞ‌ాيا، بريطانيا-فرنسا قد أخذ. سليمان، إتفاقية بين ما, يذكر الحدود أي بعد, معاملة بولندا، الإطلاق عل إيو\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/send-message",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"send-message"
									]
								}
							},
							"response": []
						},
						{
							"name": "send-message (massage is not a string, but is a number)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roomId\": \"00e197b2-fab1-471a-acae-77821a55d0e2\",\n  \"text\": 123\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/send-message",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"send-message"
									]
								}
							},
							"response": []
						},
						{
							"name": "send-message (massage is not a string, but is a boolean)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roomId\": \"00e197b2-fab1-471a-acae-77821a55d0e2\",\n  \"text\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/send-message",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"send-message"
									]
								}
							},
							"response": []
						},
						{
							"name": "send-message (massage is not a string, but is an array)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roomId\": \"00e197b2-fab1-471a-acae-77821a55d0e2\",\n  \"text\": []\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/send-message",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"send-message"
									]
								}
							},
							"response": []
						},
						{
							"name": "send-message (nonexistent room)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roomId\": \"00e177b2-fab1-471a-acae-77821a55d0e2\",\n  \"text\": \"test\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/send-message",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"send-message"
									]
								}
							},
							"response": []
						},
						{
							"name": "send-message (empty room id)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roomId\": \"\",\n  \"text\": \"test\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/send-message",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"send-message"
									]
								}
							},
							"response": []
						},
						{
							"name": "send-message (no access to this room)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roomId\": \"fbdcd63b-97da-4631-a17c-cf609e0747f7\",\n  \"text\": \"test\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/send-message",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"send-message"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{idTokenDoctor}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "mark-room-as-read",
					"item": [
						{
							"name": "mark-room-as-read (true)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roomId\": \"0c8a129f-2543-49d7-86c2-fdda98030ce8\",\n  \"markAsRead\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/mark-room-as-read",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"mark-room-as-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "mark-room-as-read (false)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roomId\": \"0c8a129f-2543-49d7-86c2-fdda98030ce8\",\n  \"markAsRead\": false\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/mark-room-as-read",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"mark-room-as-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "mark-room-as-read (incorrect room id - true)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roomId\": \"0c8a129f-2543-41d7-86c2-fdda98030ce8\",\n  \"markAsRead\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/mark-room-as-read",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"mark-room-as-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "mark-room-as-read (incorrect room id - false)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roomId\": \"0c8a129f-2543-41d7-86c2-fdda98030ce8\",\n  \"markAsRead\": false\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/mark-room-as-read",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"mark-room-as-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "mark-room-as-read (empty room_id - true)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roomId\": \"\",\n  \"markAsRead\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/mark-room-as-read",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"mark-room-as-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "mark-room-as-read (empty room_id - false)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roomId\": \"\",\n  \"markAsRead\": false\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/mark-room-as-read",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"mark-room-as-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "mark-room-as-read (markAsRead is not a boolean but a null)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roomId\": \"0c8a129f-2543-49d7-86c2-fdda98030ce8\",\n  \"markAsRead\": null\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/mark-room-as-read",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"mark-room-as-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "mark-room-as-read (markAsRead is not a boolean but a text)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roomId\": \"0c8a129f-2543-49d7-86c2-fdda98030ce8\",\n  \"markAsRead\": \"Test\"\n\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/mark-room-as-read",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"mark-room-as-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "mark-room-as-read (markAsRead is not a boolean but a number)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roomId\": \"0c8a129f-2543-49d7-86c2-fdda98030ce8\",\n  \"markAsRead\": 123\n\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/mark-room-as-read",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"mark-room-as-read"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{idTokenDoctor}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "mark-messages-as-read",
					"item": [
						{
							"name": "mark-messages-as-read",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"message_ids\": [\n    \"70ada60a-c183-49b7-9b2b-93697c7d732e\"\n  ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/mark-messages-as-read",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"mark-messages-as-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "mark-messages-as-read (massageId without signs)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"message_ids\": [\n    \"\"\n  ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/mark-messages-as-read",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"mark-messages-as-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "mark-messages-as-read (empty massageId)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"message_ids\": [\n  ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/common/chat/mark-messages-as-read",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"common",
										"chat",
										"mark-messages-as-read"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{idTokenDoctor}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Doctor -> patient card controller",
			"item": [
				{
					"name": "patient-card/details",
					"item": [
						{
							"name": "patient-card/details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {\r",
											"   pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"const resData = pm.response.json();\r",
											"console.log(resData.contactPhoneNumber);\r",
											"pm.environment.set(\"patientTelNumber\", resData.contactPhoneNumber);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/doctor/patient-card/details/{{PatientId2}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"patient-card",
										"details",
										"{{PatientId2}}"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{idTokenDoctor}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "patient-card/details-menu",
					"item": [
						{
							"name": "patient-card/details-menu",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {\r",
											"   pm.response.to.have.status(200);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/doctor/patient-card/details-menu/{{PatientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"patient-card",
										"details-menu",
										"{{PatientId}}"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{idTokenDoctor}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Doctor -> patient notes controller",
			"item": [
				{
					"name": "GET notes/all",
					"item": [
						{
							"name": "notes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {\r",
											"   pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"let moment = require ('moment'); \r",
											"pm.test('Date is present in correct format', () => {\r",
											"    _.each(pm.response.json(), (item) => {\r",
											"        pm.expect(item.creationDate).to.include(moment(item.creationDate).toISOString())\r",
											"    })\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes/all/{{PatientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes",
										"all",
										"{{PatientId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (incorrect patientId)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", () => {\r",
											"   pm.response.to.have.status(404);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes/all/024d1742-765f-4d0b-acc2-af3d416e1fd6",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes",
										"all",
										"024d1742-765f-4d0b-acc2-af3d416e1fd6"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (empty patientId)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", () => {\r",
											"   pm.response.to.have.status(404);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes/all/",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes",
										"all",
										""
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{idTokenDoctor}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "POST notes",
					"item": [
						{
							"name": "notes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"   pm.response.to.have.status(201);\r",
											"})\r",
											"\r",
											"const resData = pm.response.json();\r",
											"console.log(resData.id);\r",
											"pm.environment.set(\"noteId\", resData.id);\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var date = jsonData.creationDate;\r",
											"let moment = require ('moment'); \r",
											"pm.test(\"Date is present in correct format\", function () { \r",
											"    pm.expect(date).to.include(moment(date).toISOString())\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": \"test\",\n  \"patientId\": \"024d1742-765f-4d0b-acc2-af3d746e1fd6\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (body without signs)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": \"\",\n  \"patientId\": \"024d1742-765f-4d0b-acc2-af3d746e1fd6\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (empty body)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\":,\n  \"patientId\": \"024d1742-765f-4d0b-acc2-af3d746e1fd6\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (body = null)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": null ,\n  \"patientId\": \"024d1742-765f-4d0b-acc2-af3d746e1fd6\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (body = numbers)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": 123,\n  \"patientId\": \"024d1742-765f-4d0b-acc2-af3d746e1fd6\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (body = boolean)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": true ,\n  \"patientId\": \"024d1742-765f-4d0b-acc2-af3d746e1fd6\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (body = signs)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": xyz,\n  \"patientId\": \"024d1742-765f-4d0b-acc2-af3d746e1fd6\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (incorrect patientId)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", () => {\r",
											"   pm.response.to.have.status(404);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": \"xyz\",\n  \"patientId\": \"024dd742-765f-4d0b-acc2-af3d746e1fd6\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (empty patientId)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": \"xyz\",\n  \"patientId\": \n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (empty string patientId)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", () => {\r",
											"   pm.response.to.have.status(403);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": \"xyz\",\n  \"patientId\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (patientId number)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": \"xyz\",\n  \"patientId\": 123\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (patientId signs)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": \"xyz\",\n  \"patientId\": xyz\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (patientId boolean)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"   pm.response.to.have.status(400);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": \"xyz\",\n  \"patientId\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (patientId null)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", () => {\r",
											"   pm.response.to.have.status(403);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": \"xyz\",\n  \"patientId\": null\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{idTokenDoctor}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "PUT notes",
					"item": [
						{
							"name": "notes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var date = jsonData.creationDate;\r",
											"let moment = require ('moment'); \r",
											"pm.test(\"Date is present in correct format\", function () { \r",
											"    pm.expect(date).to.include(moment(date).toISOString())\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": \"test tst\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes/{{noteId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes",
										"{{noteId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (incorrect noteId)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Should verify response status code\", () => {\r",
											"    console.log(pm.response)\r",
											"    pm.expect(pm.response.code).to.oneOf([403, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": \"test tst\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes/4c4e4eb7-c6b7-4719-891c-499c0ff025c3",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes",
										"4c4e4eb7-c6b7-4719-891c-499c0ff025c3"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (empty noteId)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": \"test tst\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes/",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (body without signs)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes/{{noteId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes",
										"{{noteId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (empty body)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\":\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes/{{noteId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes",
										"{{noteId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (body null)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": null\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes/{{noteId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes",
										"{{noteId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (body numbers)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": 123\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes/{{noteId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes",
										"{{noteId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (body boolean)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": true\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes/{{noteId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes",
										"{{noteId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (body signs)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": xyz\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes/{{noteId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes",
										"{{noteId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (patient want to change note that his doctor put out)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{idTokenPatient}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": \"test 123\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes/{{noteId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes",
										"{{noteId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (patient want to change not his note)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{idTokenPatient}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": \"test xyz\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes/{{strangeNoteId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes",
										"{{strangeNoteId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (doctor want to change not his note)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Should verify response status code\", () => {\r",
											"    console.log(pm.response)\r",
											"    pm.expect(pm.response.code).to.oneOf([403, 404]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": \"test 123456\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes/{{strangeNoteId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes",
										"{{strangeNoteId}}"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{idTokenDoctor}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "DELETE notes",
					"item": [
						{
							"name": "notes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes/{{noteId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes",
										"{{noteId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (nonexistent note)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Should verify response status code\", () => {\r",
											"    console.log(pm.response)\r",
											"    pm.expect(pm.response.code).to.oneOf([403, 404]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes/f8ca6c46-61d4-4b16-b354-11a244d13e2d",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes",
										"f8ca6c46-61d4-4b16-b354-11a244d13e2d"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (empty noteId)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes/",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (patient want to delete note that his doctor put out)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{idTokenPatient}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes/{{noteId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes",
										"{{noteId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (patient want to delete not his note)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{idTokenPatient}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes/{{strangeNoteId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes",
										"{{strangeNoteId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "notes (doctor want to delete not his note)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Should verify response status code\", () => {\r",
											"    console.log(pm.response)\r",
											"    pm.expect(pm.response.code).to.oneOf([403, 404]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseURL}}/api/doctor/notes/{{strangeNoteId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"doctor",
										"notes",
										"{{strangeNoteId}}"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{idTokenDoctor}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{idTokenDoctor}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Doctor ICD controller",
			"item": [
				{
					"name": "icd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let moment = require ('moment'); \r",
									"pm.test('Date is present in correct format', () => {\r",
									"    _.each(pm.response.json(), (item) => {\r",
									"        pm.expect(item.creationDate).to.include(moment(item.creationDate).toISOString())\r",
									"    })\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/api/doctor/icd/all/{{PatientId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"doctor",
								"icd",
								"all",
								"{{PatientId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "icd (incorrect patientId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should verify response status code\", () => {\r",
									"    console.log(pm.response)\r",
									"    pm.expect(pm.response.code).to.oneOf([200, 404]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/api/doctor/icd/all/024d1142-765f-4g0b-acc2-af3d746e1fdg",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"doctor",
								"icd",
								"all",
								"024d1142-765f-4g0b-acc2-af3d746e1fdg"
							]
						}
					},
					"response": []
				},
				{
					"name": "icd (empty patientId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/api/doctor/icd/all/",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"doctor",
								"icd",
								"all",
								""
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{idTokenDoctor}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Doctor prescriptions controller",
			"item": [
				{
					"name": "prescriptions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let moment = require ('moment'); \r",
									"pm.test('Date is present in correct format', () => {\r",
									"    _.each(pm.response.json(), (item) => {\r",
									"        pm.expect(item.date).to.include(moment(item.date).toISOString())\r",
									"    })\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/api/doctor/prescriptions/all/{{PatientId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"doctor",
								"prescriptions",
								"all",
								"{{PatientId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "prescriptions (incorrect patientId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should verify response status code\", () => {\r",
									"    console.log(pm.response)\r",
									"    pm.expect(pm.response.code).to.oneOf([200, 404]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/api/doctor/prescriptions/all/024d1742-765f-4d0b-a4c2-af3d74fe1fd6",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"doctor",
								"prescriptions",
								"all",
								"024d1742-765f-4d0b-a4c2-af3d74fe1fd6"
							]
						}
					},
					"response": []
				},
				{
					"name": "prescriptions (empty patientId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/api/doctor/prescriptions/all/",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"doctor",
								"prescriptions",
								"all",
								""
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{idTokenDoctor}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Doctor subscriptions controller",
			"item": [
				{
					"name": "subscriptions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let moment = require ('moment'); \r",
									"pm.test('Date is present in correct format', () => {\r",
									"    _.each(pm.response.json(), (item) => {\r",
									"        pm.expect(item.billingFrom).to.include(moment(item.billingFrom).toISOString())\r",
									"    })\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/api/doctor/subscriptions/patient/{{PatientId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"doctor",
								"subscriptions",
								"patient",
								"{{PatientId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "subscriptions (incorrect PatientId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should verify response status code\", () => {\r",
									"    console.log(pm.response)\r",
									"    pm.expect(pm.response.code).to.oneOf([200, 404]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/api/doctor/subscriptions/patient/024d1742-f65f-4d0b-acc2-af3d746e1fd6",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"doctor",
								"subscriptions",
								"patient",
								"024d1742-f65f-4d0b-acc2-af3d746e1fd6"
							]
						}
					},
					"response": []
				},
				{
					"name": "subscriptions (empty PatientId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/api/doctor/subscriptions/patient/",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"doctor",
								"subscriptions",
								"patient",
								""
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{idTokenDoctor}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Doctor timelne controller",
			"item": [
				{
					"name": "timeline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let moment = require ('moment'); \r",
									"pm.test('Date is present in correct format', () => {\r",
									"    _.each(pm.response.json(), (item) => {\r",
									"        pm.expect(item.date).to.include(moment(item.date).toISOString())\r",
									"    })\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/api/doctor/timeline/patient/{{PatientId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"doctor",
								"timeline",
								"patient",
								"{{PatientId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "timeline (incorrect PatientId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should verify response status code\", () => {\r",
									"    console.log(pm.response)\r",
									"    pm.expect(pm.response.code).to.oneOf([200, 404]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/api/doctor/timeline/patient/024d1742-765f-4d0b-acc2-af3d7f6e1fd6",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"doctor",
								"timeline",
								"patient",
								"024d1742-765f-4d0b-acc2-af3d7f6e1fd6"
							]
						}
					},
					"response": []
				},
				{
					"name": "timeline (empty PatientId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/api/doctor/timeline/patient/",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"doctor",
								"timeline",
								"patient",
								""
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{idTokenDoctor}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Test helper controller- patient context",
			"item": [
				{
					"name": "ids-by-email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"const resData = pm.response.json();\r",
									"console.log(resData.patientId);\r",
									"pm.environment.set(\"PatientId\", resData.patientId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://doctor-one-test.appspot.com/api/test-helper/patient/ids-by-email/{{email}}",
							"protocol": "https",
							"host": [
								"doctor-one-test",
								"appspot",
								"com"
							],
							"path": [
								"api",
								"test-helper",
								"patient",
								"ids-by-email",
								"{{email}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update patient data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sex\": \"female\",\n  \"birthDate\": \"1990-01-01\",\n  \"personalId\": \"73011432287\",\n  \"bloodGroup\": \"0-\",\n  \"street\": \"ul. doktora Łana\",\n  \"houseNumber\": \"156\",\n  \"apartmentNumber\": \"\",\n  \"postalCode\": \"00-103\",\n  \"city\": \"Warszawa\",\n  \"consentMarketingAgreement\": true,\n  \"consentApplicationRegulations\": true,\n  \"consentPrivacyPolicy\": true,\n  \"contactEmail\": \"test@test.test\",\n  \"contactPhoneCountry\": \"PL\",\n  \"contactPhoneNumber\": \"111 222 333\",\n  \"contactPhonePrefix\": \"+48\"\n}"
						},
						"url": {
							"raw": "https://doctor-one-test.appspot.com/api/test-helper/patient/{{PatientId}}",
							"protocol": "https",
							"host": [
								"doctor-one-test",
								"appspot",
								"com"
							],
							"path": [
								"api",
								"test-helper",
								"patient",
								"{{PatientId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get account chat messages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let moment = require ('moment'); \r",
									"pm.test('Date is present in correct format', () => {\r",
									"    _.each(pm.response.json(), (item) => {\r",
									"        pm.expect(item.creationDate).to.include(moment(item.creationDate).toISOString())\r",
									"    })\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://doctor-one-test.appspot.com/api/test-helper/chat/all-messages/{{accountId}}",
							"protocol": "https",
							"host": [
								"doctor-one-test",
								"appspot",
								"com"
							],
							"path": [
								"api",
								"test-helper",
								"chat",
								"all-messages",
								"{{accountId}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{idTokenDoctor}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"value": "",
			"type": "string",
			"disabled": true
		}
	]
}